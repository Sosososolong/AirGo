@{
    ViewData["Title"] = "Http Request Processor ...";
}

<div>
    <h1>HTTP请求处理器</h1>
    <div id="tableContainer"></div>
</div>

@section Scripts{
    <script>
        $(async function () {
            const apiUrl = "/Sync/GetHttpRequestProcessors";
            
            const tableId = 'tableProcessors';

            const tableParentSelector = "#tableContainer";
            // TODO: 像克隆这样按钮支持自定义表单, 可以传入克隆的处理器Title, Name等参数
            const ths = [
                { name: 'title', title: '标题' },
                { name: 'name', title: '名称/编码' },
                { name: 'url', title: 'Url地址' },
                { name: 'headers', showPart: 12, title: '请求头' },
                { name: 'stepCirleRunningWhenLastStepHasData', title: '步骤循环', enumValus: [ false, true ] },
                { name: 'remark', title: '备注', width: 50, showPart: 12 },
                // 操作栏
                { name: '', title: '操作', type: 'button', tmpl: `<button type="button" class="btn btn-primary btn-sm" data-bs-toggle="collapse" href="#collapse${tableId}{{id}}" role="button" aria-expanded="true" aria-controls="collapse${tableId}{{id}}">步骤</button>
                        <button type="button" class="btn btn-primary btn-sm" data-table-id="${tableId}" data-id="{{id}}" data-fetch-url="/Sync/GetHttpRequestProcessors" data-update-url="/Sync/UpdateHttpRequestProcessor" data-method="POST" onclick="showUpdatePannel(this)">修改</button>
                        <button type="button" class="btn btn-primary btn-sm d-none" data-table-id="${tableId}" data-id="{{id}}" data-delete-url="/Sync/DeleteHttpRequestProcessor" data-method="POST" onclick="showConfirmBox('确定删除? 此操作无法撤销!', () => deleteData(this))">删除</button>
                        <button type="button" class="btn btn-primary btn-sm" data-table-id="${tableId}" data-content="&quot;{{id}}&quot;" data-execute-url="/Sync/CloneProcessor" data-method="POST" onclick="showConfirmBox('您确定要克隆数据吗', () => execute(this))">克隆</button>
                        <button type="button" class="btn btn-primary btn-sm" data-table-id="${tableId}" data-content="{ &quot;processorIds&quot;: [{{id}}], &quot;stepId&quot;: 0 }" data-execute-url="/Sync/ExecuteHttpProcessor" data-method="POST" onclick="showConfirmBox('您确定要执行所有步骤吗?', () => execute(this))">执行</button>`
                }
            ]
            const idFieldName = "id";

            /**
             * HttpRequestProcessors
             */
            await createTable(apiUrl, 1, 10, tableId, tableParentSelector, ths, idFieldName, null, null, onProcessorsDataLoaded, ''
                , { modalType: 'add', url: 'Sync/AddHttpRequestProcessor', 'method': 'POST' }
            )

            /**
             * 创建表 - Steps (一张表中的所有数据对应一个Processor)
             */
            async function onProcessorsDataLoaded(row) {
                const processorId = row[idFieldName];
                const tableStepsId = `tableStepsForProcessor${processorId}`;
                let steps = row.steps;
                if (!steps || !(steps.length) || $(`#${tableStepsId}`).length) {
                    return;
                }
                await createTable(
                    "/Sync/GetHttpRequestProcessorSteps", 1, 1000,
                    tableStepsId,
                    tableParentSelector,
                    [
                        { name: 'id', title: 'ID' },
                        { name: 'parameters', title: '执行参数' },
                        { name: 'requestBody', title: '请求体' },
                        { name: 'dataContextBuilder', title: '数据上下文构建器' },
                        { name: 'remark', title: '备注', width: 100, showPart: 8 },
                        { name: 'presetDataContext', title: '预设数据上下文', showPart: 8 },
                        { name: 'endDataContext', title: '执行完成后的数据上下文', showPart: 8 },
                        //{ name: 'previous', title: '上一个步骤', type: `dataSource|dataSourceApi=/Sync/GetHttpRequestProcessorSteps|displayField=remark|body={"filterItems":[{"fieldName":"processorId","compareType": "=","value":"${processorId}"}],"keywords": {"fields": [],"value": ""}}|defaultValue=0` },
                        { name: 'processorId', title: 'HTTP处理器', type: 'dataSource|dataSourceApi=/Sync/GetHttpRequestProcessors?pageIndex=1&pageSize=1000|displayField=title' },
                        { name: '', title: '操作', type: 'button', tmpl: `<button type="button" class="btn btn-primary btn-sm mt-1" data-bs-toggle="collapse" href="#collapse${tableStepsId}{{id}}" role="button" aria-expanded="true" aria-controls="collapse${tableStepsId}{{id}}">数据处理器</button>
                                <button type="button" class="btn btn-primary btn-sm mt-1" data-table-id="${tableStepsId}" data-id="{{id}}" data-fetch-url="/Sync/GetHttpRequestProcessorSteps" data-update-url="/Sync/UpdateHttpRequestProcessorStep" data-method="POST" onclick="showUpdatePannel(this)">修改</button>
                                <button type="button" class="btn btn-primary btn-sm mt-1" data-table-id="${tableStepsId}" data-content="&quot;{{id}}&quot;" data-execute-url="/Sync/CloneStep" data-method="POST" onclick="showConfirmBox('您确定要克隆此步骤吗', () => execute(this))">克隆</button>
                                <button type="button" class="btn btn-primary btn-sm mt-1" data-table-id="${tableStepsId}" data-content="{ &quot;processorIds&quot;: [${processorId}], &quot;stepId&quot;: {{id}} }" data-delete-url="/Sync/ExecuteHttpProcessor" data-execute-url="/Sync/ExecuteHttpProcessor" data-method="POST" data-method="POST" onclick="showConfirmBox('您确定要执行此步骤吗', () => execute(this))">执行</button>
                                <button type="button" class="btn btn-primary btn-sm mt-1 d-none" data-table-id="${tableStepsId}" data-id="{{id}}" data-delete-url="/Sync/DeleteHttpRequestProcessorStep" data-method="POST" onclick="showConfirmBox('确定删除? 此操作无法撤销!', () => deleteData(this))">删除</button>
                                `
                        }
                    ],
                    idFieldName,
                    [
                        {
                            fieldName: 'processorId',
                            compareType: '=',
                            value: processorId.toString()
                        }
                    ],
                    steps,
                    null,
                    // wrapper 每一张表关联的是Processor表的某一行数据
                    `<div id="collapse${tableId}${row[idFieldName]}" class="collapse" aria-labelledby="${tableParentSelector}" data-bs-parent="#accordion"><div class="card-body">{{tableHtml}}</div></div>`
                    // Modal Settings
                    , { modalType: 'add', url: 'Sync/AddHttpRequestProcessorStep', 'method': 'POST' }
                );


                await createTableDataHandlers(steps, tableStepsId);
            }

            /**
             * 创建表 - DataHandler(一张表中的所有数据对应一个Step)
             * steps 某一条Processor记录对应的所有步骤, 这些steps将在一张表中展示
             * tableStepsId steps所在表的Id
             */
            async function createTableDataHandlers(steps, tableStepsId) {
                for (let i = 0; i < steps.length; i++) {
                    const step = steps[i];
                    let loadingData = step.dataHandlers;
                    const stepId = step[idFieldName];
                    const tableDataHandlersId = `tableDataHandlersForStep${stepId}`;
                    if (loadingData && (loadingData.length) && !$(`#${tableDataHandlersId}`).length) {
                        await createTable(
                            "/Sync/GetHttpRequestProcessorStepDataHandlers", 1, 1000,
                            tableDataHandlersId,
                            tableParentSelector,
                            [
                                { name: 'dataHandler', title: '数据处理器' },
                                { name: 'parametersInput', title: '参数' },
                                { name: 'stepId', title: '步骤' },
                                //{ name: 'previous', title: '上一个数据处理器', type: `dataSource|dataSourceApi=Sync/GetHttpRequestProcessorStepDataHandlers|displayField=remark|body={"filterItems":[{"fieldName":"stepId","compareType": "=","value":"${stepId}"}],"keywords": {"fields": [],"value": ""}}|defaultValue=0` },
                                { name: 'enabled', title: '是否启用', enumValus: [false, true] },
                                { name: 'remark', title: '备注', width: 200 },
                                {
                                    name: '',
                                    title: '操作',
                                    type: 'button',
                                    tmpl: `
                                        <button type="button" class="btn btn-primary btn-sm mt-1" data-table-id="${tableDataHandlersId}" data-id="{{id}}" data-fetch-url="/Sync/GetHttpRequestProcessorStepDataHandlers" data-update-url="/Sync/UpdateHttpRequestProcessorStepDataHandler" data-method="POST" onclick="showUpdatePannel(this)">修改</button>
                                        <button type="button" class="btn btn-primary btn-sm mt-1 d-none" data-table-id="${tableDataHandlersId}" data-id="{{id}}" data-delete-url="/Sync/DeleteHttpRequestProcessorStepDataHandler" data-method="POST" onclick="deleteData(this)">删除</button>`
                                }
                            ],
                            idFieldName,
                            [
                                {
                                    fieldName: 'stepId',
                                    compareType: '=',
                                    value: stepId.toString()
                                }
                            ],
                            loadingData,
                            null,
                            // wrapper 每一张表关联的是Steps表的某一行数据
                            `<div id="collapse${tableStepsId}${stepId}" class="collapse" aria-labelledby="${tableParentSelector}" data-bs-parent="#accordion"><div class="card-body">{{tableHtml}}</div></div>`
                            // Modal Settings
                            , { modalType: 'add', url: 'Sync/AddHttpRequestProcessorStepDataHandler', 'method': 'POST' }
                        );
                    }
                }
            }
        });
    </script>
}
