@{
    ViewData["Title"] = "Http Request Processor ...";
}

<div class="container">
    <h1>HTTP请求处理器</h1>
    <div class="row">
        <div class="col-md-6">
            <form id="search-form">
                <div class="mb-3">
                    <label for="search-input" class="form-label">关键字</label>
                    <input type="text" class="form-control" id="search-input">
                </div>
                <button type="submit" class="btn btn-primary">搜索</button>
            </form>
        </div>
    </div>
    <div id="tableContainer">
        <table>
            <tr class="align">

            </tr>
        </table>
    </div>
</div>

@section Scripts{
    <script>
        $(function () {
            const apiUrl = "Sync/GetHttpRequestProcessors";
            
            const tableId = 'tableProcessors';

            const tableParentSelector = "#tableContainer";
            const ths = [
                { name: 'title', title: '标题' },
                { name: 'name', title: '名称/编码' },
                { name: 'url', title: 'Url地址' },
                { name: 'stepCirleRunningWhenLastStepHasData', title: '步骤循环', enumValus: [ false, true ] },
                { name: 'remark', title: '备注', width: 200, showPart: 12 },
                { name: '', title: '操作', type: 'button', tmpl: `<button type="button" class="btn btn-primary btn-sm" data-bs-toggle="collapse" href="#collapse${tableId}{{id}}" role="button" aria-expanded="true" aria-controls="collapse${tableId}{{id}}">步骤</button>` }
            ]
            const idFieldName = "id";

            function onProcessorsDataLoaded(row) {
                const processorId = row[idFieldName];
                const tableStepsId = `tableStepsForProcessor${processorId}`;
                var steps = row.steps;
                if (!steps || !(steps.length) || $(`#${tableStepsId}`).length) {
                    return;
                }
                createTable(
                    "Sync/GetHttpRequestProcessorSteps",
                    tableStepsId,
                    tableParentSelector,
                    [
                        { name: 'parameters', title: '执行参数' },
                        { name: 'dataContextBuilder', title: '数据上下文构建器', showPart: 12 },
                        { name: 'remark', title: '备注', width: 200, showPart: 8 },
                        { name: 'presetDataContext', title: '预设数据上下文' },
                        { name: 'httpProcessorId', title: 'HTTP处理器', type: 'dataSource|dataSourceApi=Sync/GetHttpRequestProcessors|displayField=title' },
                        { name: '', title: '操作', type: 'button', tmpl: `<button type="button" class="btn btn-primary btn-sm" data-bs-toggle="collapse" href="#collapse${tableStepsId}{{id}}" role="button" aria-expanded="true" aria-controls="collapse${tableStepsId}{{id}}">数据处理器</button>` }
                    ],
                    idFieldName,
                    [
                        {
                            fieldName: 'httpProcessorId',
                            compareType: '=',
                            value: '1'
                        }
                    ],
                    steps,
                    null,
                    // wrapper 每一张表关联的是Processor表的某一行数据
                    `<div id="collapse${tableId}${row[idFieldName]}" class="collapse" aria-labelledby="${tableParentSelector}" data-bs-parent="#accordion"><div class="card-body">{{tableHtml}}</div></div>`
                    // addModalSettings
                    , { modalType: 'add', api: 'Sync/AddHttpRequestProcessorStepDataHandler', 'method': 'POST' }
                    // addModalSettings
                    , { modalType: 'update', api: 'Sync/UpdateHttpRequestProcessorStepDataHandler', 'method': 'POST' }
                );


                createTableDataHandlers(steps, tableStepsId);
            }

            /**
             * steps 某一条Processor所有的记录对应的所有步骤
             * tableStepsId 当前steps所在表的Id
             */
            function createTableDataHandlers(steps, tableStepsId) {
                for (let i = 0; i < steps.length; i++) {
                    const step = steps[i];
                    let loadingData = step.dataHandlers;
                    const stepId = step[idFieldName];
                    const tableDataHandlersId = `tableDataHandlersForStep${stepId}`;
                    if (loadingData && (loadingData.length) && !$(`#${tableDataHandlersId}`).length) {
                        createTable(
                            "Sync/GetHttpRequestProcessorStepDataHandlers",
                            tableDataHandlersId,
                            tableParentSelector,
                            [
                                { name: 'dataHandler', title: '数据处理器' },
                                { name: 'parametersInput', title: '参数' },
                                { name: 'remark', title: '备注', width: 200, showPart: 8 }
                            ],
                            idFieldName,
                            [
                                {
                                    fieldName: 'httpProcessorId',
                                    compareType: '=',
                                    value: '1'
                                }
                            ],
                            loadingData,
                            null,
                            // wrapper 每一张表关联的是Steps表的某一行数据
                            `<div id="collapse${tableStepsId}${stepId}" class="collapse" aria-labelledby="${tableParentSelector}" data-bs-parent="#accordion"><div class="card-body">{{tableHtml}}</div></div>`
                            // addModalSettings
                            , { modalType: 'add', api: 'Sync/AddHttpRequestProcessorStepDataHandler', 'method': 'POST' }
                            // addModalSettings
                            , { modalType: 'update', api: 'Sync/UpdateHttpRequestProcessorStepDataHandler', 'method': 'POST' }
                        );
                    }
                }
            }

            createTable(apiUrl, tableId, tableParentSelector, ths, idFieldName, null, null, onProcessorsDataLoaded, ''
                , { modalType: 'add', url: 'Sync/AddHttpRequestProcessor', 'method': 'POST' }
                , { modalType: 'update', url: 'Sync/UpdateHttpRequestProcessor', 'method': 'POST' }
            )
        });
    </script>
}
