@{
    Layout = null;
    ViewData["Title"] = "OAuth2.0 Debug";
}

<h2 id="token" class="text-info">Try to get token</h2>
<label for="authorize_endpoint" class="form-label">Identity Server Authorize Endpoint</label>
<input type="text" id="authorize_endpoint" name="authorize_endpoint" class="form-control" aria-describedby="authorize_endpointHelpBlock" value="https://solong.com:4500/connect/authorize">
<div id="authorize_endpointHelpBlock" class="form-text mb-5 text-primary">
    授权服务器token地址.
</div>
<!--
    client_id=CLIENTID
    &client_secret=CLIENTSECRET
    &scope=email%20profile%20roles%20openid%20sylas.api%20offline_access
    &grant_type=password
    &username=admin2024
    &password=changeme
-->
<form method="get" action="" id="authForm">
    <label for="client_id" class="form-label">client_id</label>
    <input type="text" id="client_id" name="client_id" class="form-control" aria-describedby="client_idHelpBlock">
    <div id="client_idHelpBlock" class="form-text text-warning">
        客户端Id.
    </div>

    <label for="client_secret" class="form-label mt-3">client_secret</label>
    <input type="text" id="client_secret" name="client_secret" class="form-control" aria-describedby="client_secretHelpBlock">
    <div id="client_secretHelpBlock" class="form-text">
        客户端密钥.
    </div>
    
    <label for="scope" class="form-label mt-3">scope</label>
    <input type="text" id="scope" name="scope" class="form-control" aria-describedby="scopeHelpBlock" value="email profile roles openid sfapi">
    <div id="scopeHelpBlock" class="form-text text-warning">
        作用域.
    </div>

    <label for="grant_type" class="form-label mt-3">grant_type</label>
    <input type="text" id="grant_type" name="grant_type" class="form-control" aria-describedby="grant_typeHelpBlock" value="password">
    <div id="grant_typeHelpBlock" class="form-text">
        授权模式 - 密码模式(password), 授权码模式(authorization code), 隐式授权模式(implicit)
    </div>

    <label for="username" class="form-label mt-3">username</label>
    <input type="text" id="username" name="username" class="form-control" aria-describedby="usernameHelpBlock" value="admin">
    <div id="usernameHelpBlock" class="form-text text-warning">
        用户名.
    </div>
    <label for="password" class="form-label mt-3">password</label>
    <input type="text" id="password" name="password" class="form-control" aria-describedby="passwordHelpBlock" value="changeme">
    <div id="passwordHelpBlock" class="form-text text-warning">
        密码.
    </div>
    
    <button class="btn btn-primary mt-3" type="submit" grant-type="password">密码模式登录</button>
    <button class="btn btn-primary mt-3" type="submit" grant-type="code">授权码模式登录</button>
    <button class="btn btn-primary mt-3" type="submit" grant-type="implicit">隐式授权模式登录</button>
</form>

@* @section Scripts{ *@
    <script>
        var buttons = document.querySelectorAll("button.btn[type='submit']");

        Array.from(buttons).forEach(function (button) {
            button.addEventListener("click", function (event) {
                var grantType = event.target.getAttribute("grant-type");
                document.querySelector("#grant_type").value = grantType
            });
        });


        document.querySelector("#authForm").addEventListener("submit", function (event) {
            event.preventDefault(); // 阻止默认的表单提交行为

            // 获取表单数据
            var form = event.target;
            var formData = new FormData(form);

            // 构建查询字符串
            var queryString = new URLSearchParams(formData).toString();

            let authorizationEndpoint = document.querySelector("#authorize_endpoint").value;
            fetch(authorizationEndpoint, {
                "headers": {
                    "accept": "application/json, text/plain, */*",
                    "accept-language": "zh-CN,zh;q=0.9,en;q=0.8,en-GB;q=0.7,en-US;q=0.6",
                    "content-type": "application/x-www-form-urlencoded"
                },
                "referrer": "",
                "referrerPolicy": "strict-origin-when-cross-origin",
                "body": queryString,
                "method": "POST",
                "mode": "cors"
            })
            .then(res => res.json())
            .then(tokenResponse => {
                document.getElementById('token').innerHTML = tokenResponse.access_token;

                fetch(`UserInfo?authority=${authorizationEndpoint}`, {
                    "headers": {
                        "accept": "application/json, text/plain, */*",
                        "content-type": "application/x-www-form-urlencoded",
                        "authorization": `Bearer ${tokenResponse.access_token}`
                    },
                    "method": "POST"
                }).then(res => res.json())
                .then(response => {
                    console.log('userinfo response', response)
                })
            });


            // 缓存表单信息
            localStorage.setItem("oauth_local_authorize_endpoint", document.getElementById('authorize_endpoint').value)
            localStorage.setItem("oauth_local_client_id", document.getElementById('client_id').value)
            localStorage.setItem("oauth_local_client_secret", document.getElementById('client_secret').value)
            localStorage.setItem("oauth_local_scope", document.getElementById('scope').value)
            localStorage.setItem("oauth_local_username", document.getElementById('username').value)
            localStorage.setItem("oauth_local_password", document.getElementById('password').value)
        });


        // 从本地存储(当作配置使用)初始化授权参数
        let authorizeEndPoint = localStorage.getItem("oauth_local_authorize_endpoint")
        if (authorizeEndPoint) {
            document.getElementById('authorize_endpoint').value = authorizeEndPoint;
        }

        let clientId = localStorage.getItem("oauth_local_client_id")
        if (clientId) {
            document.getElementById('client_id').value = clientId;
        }
        
        let clientSecret = localStorage.getItem("oauth_local_client_secret")
        if (clientSecret) {
            document.getElementById('client_secret').value = clientSecret;
        }

        let scope = localStorage.getItem("oauth_local_scope")
        if (scope) {
            document.getElementById('scope').value = scope;
        }

        let username = localStorage.getItem("oauth_local_username")
        if (username) {
            document.getElementById('username').value = username;
        }
        let password = localStorage.getItem("oauth_local_password")
        if (password) {
            document.getElementById('password').value = password;
        }
    </script>
@* } *@

