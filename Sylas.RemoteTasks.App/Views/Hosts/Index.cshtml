@{
    ViewData["Title"] = "Remote Hosts Manager ...";
}
<div class="my-4">
    <div class="row">
        @foreach (var remoteHostInfoProvider in Model)
        {
            @* 服务器标题 start *@
            var ip = remoteHostInfoProvider.RemoteHost.Ip;
            var ipNumber = ip.Replace(".", string.Empty);
            var remoteHostInfos = remoteHostInfoProvider.GetRemoteHostInfos();
            <h3 class="my-3 text-center dropdown-toggle" id="dropdownHostCommandInfos@(ipNumber)" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                @(ip) (@remoteHostInfos.Count)
            </h3>
            <div class="dropdown-menu" aria-labelledby="dropdownHostCommandInfos@(ipNumber)">
                <div class="input-group mb-3">
                    <input type="text" class="form-control" id="searchDropdown@(ipNumber)" value="" placeholder="Search..." aria-label="Search" onkeyup="onHostInfosSearched(this)" />
                </div>
                <div class="dropdown-divider"></div>
                @foreach (var remoteHostCmd in remoteHostInfoProvider.RemoteHost.Commands)
                {
                    <a class="dropdown-item" data-value="@remoteHostCmd.Name" href="#" onclick="executeCommand('@(ip)', '@(remoteHostInfoProvider.RemoteHost.Name)', '@(remoteHostCmd.Name)', '@(remoteHostCmd.CommandTxt)')">@remoteHostCmd.Name</a>
                }
            </div>
            @* 服务器标题 end *@

            <div class="row">
                @foreach (var info in remoteHostInfos)
                {
                    var hostInfoName = $"{ipNumber}{info.Name.Replace(".", "-")}";
                    <div class="col-md-12 mb-4">
                        <div class="card">
                            <div class="card-header" id="heading-@(hostInfoName)">
                                <h5 class="card-title mb-0">
                                    <button class="btn btn-link" type="button" data-bs-toggle="collapse" data-bs-target="#collapse@(hostInfoName)" aria-expanded="false" aria-controls="collapse@(hostInfoName)">
                                        @info.Name
                                    </button>
                                </h5>
                            </div>
                            <div id="collapse@(hostInfoName)" class="collapse" aria-labelledby="heading-@(hostInfoName)" data-bs-parent="#accordion">
                                <div class="card-body">
                                    <p class="card-text">
                                        @foreach (var label in info.Labels)
                                        {
                                            <span style="display: inline-block; width: 100px;">
                                                @(label.Item1)
                                            </span>
                                            <span>:</span>
                                            <span style="margin-bottom: 10px; color:darkgray;">
                                                @(label.Item2)
                                            </span>
                                            <br>
                                        }
                                    </p>
                                    <p class="card-text">
                                        @foreach (var infoCmd in info.Commands)
                                        {
                                            <button class="btn default" onclick="executeCommand('@ip', '@info.Name', '@infoCmd.Name', '@infoCmd.CommandTxt')">@infoCmd.Name - @(infoCmd.CommandTxt)</button>
                                        }
                                    </p>
                                </div>
                            </div>
                        </div>
                    </div>
                } 
            </div>
        }
    </div>
</div>

@section Scripts{
    <script>
        function executeCommand(hostIp, hostInfoName, commandName, command) {
            fetch('/Hosts/Execute', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ hostIp, hostInfoName, commandName, command })
            })
                .then(response => {
                    if (response.ok) {
                        var rspJson = response.json();
                        return rspJson;
                    } else {
                        console.error("Failed to execute command: " + response.json());
                    }
                })
                .then(rspJson => {
                    showMsgBox(rspJson.msg)
                })
                .catch(error => {
                    showErrorBox(error);
                });
        }

        function onHostInfosSearched(searchDropdown) {
            // Get reference to dropdown items
            var dropdownItems = searchDropdown.parentNode.parentNode.querySelectorAll(".dropdown-item");

            var value = searchDropdown.value.toLowerCase();
            dropdownItems.forEach(function (item) {
                if (item.textContent.toLowerCase().indexOf(value) > -1) {
                    item.style.display = "block";
                } else {
                    item.style.display = "none";
                }
            });
        }
    </script>
}
