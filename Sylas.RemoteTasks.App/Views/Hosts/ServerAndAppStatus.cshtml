@{
    ViewData["Title"] = "基本信息";
}
<style>
    th, td {
        border: 1px solid #ddd;
        padding: 4px;
    }
</style>
<h5>@ViewData["Title"]</h5>

<!--基本信息-->
<table id="baseInfoTable" class="server-app-table"></table>

<!--CPU内存信息-->
<h5 style="margin-top:20px;">CPU内存信息</h5>
<table id="cpuAndMemoryInfoTable" class="server-app-table"></table>

<!--磁盘信息-->
<h5 style="margin-top:20px;">磁盘信息</h5>
<table id="diskInfoTable" class="server-app-table"></table>

<h5 style="margin-top:20px;">进程状态</h5>
<table class="processes-table">
    <thead>
        <tr>
            <th>进程名称 - PID</th>
            <th>CPU占用率</th>
            <th>内存占用</th>
        </tr>
    </thead>
</table>

@section Scripts {
    <script src="~/lib/signalr/dist/browser/signalr.js"></script>
    <script>
        // 1. 获取基本信息(磁盘大小, CPU内存占用率)
        initTables();

        // 2. 连接signalr
        var connection = new signalR.HubConnectionBuilder().withUrl("/informationHub").build();

        //Disable the send button until connection is established.
        // document.getElementById("sendButton").disabled = true;

        const trList = [];
        connection.on("ClientShowProcessesStatus", function (infos) {
            const processesTable = document.querySelector('.processes-table');
            for (let i = 0; i < trList.length; i++) {
                const tr = trList[i];
                tr.remove();
            }
            for (let i = 0; i < infos.length; i++) {
                const info = infos[i];
                const tr = document.createElement('tr');
                const infoArr = info.split(':');
                const process = infoArr[0];
                const cpuRateArr = infoArr[1].split(' ');
                tr.innerHTML = `<td>${process}</td><td>${cpuRateArr[0]}%</td><td>${cpuRateArr[1]}MB</td>`;
                processesTable.appendChild(tr);
                trList.push(tr);
            }
        });

        connection.start().then(function () {
            // document.getElementById("sendButton").disabled = false;
            
            // 请求服务器发送进程的CPU占用率和内存占用
            connection.invoke("StartGetProcessesStatus").catch(function (err) {
                return console.error(err.toString());
            });
        }).catch(function (err) {
            return console.error(err.toString());
        });

        function initTables() {
            httpRequestDataAsync('/Hosts/GetServerInfo', document.querySelectorAll(".server-app-table"), 'POST')
            .then(serverInfo => {
                document.querySelector('#baseInfoTable').innerHTML = `<tr><td>服务器名称:</td><td>${serverInfo.machineName}</td></tr>
        <tr><td>服务器IP:</td><td>${serverInfo.ip}</td></tr>
        <tr><td>操作系统:</td><td>${serverInfo.osName}</td></tr>
        <tr><td>操作系统架构:</td><td>${serverInfo.osArchitecture}</td></tr>
        <tr><td>.NET版本:</td><td>${serverInfo.doNetName}</td></tr>
        <tr><td>CPU数量:</td><td>${serverInfo.cpuCount}</td></tr>
        <tr><td>应用开始运行时间:</td><td>${serverInfo.appStartTime}</td></tr>
        <tr><td>应用总运行时间:</td><td>${serverInfo.appRunTime}</td></tr>
        <tr><td>应用占用内存:</td><td>${serverInfo.appRam}MB / ${serverInfo.appRamRate}%</td></tr>`;

                document.querySelector('#cpuAndMemoryInfoTable').innerHTML = `<tr><td>CPU使用率:</td><td>${serverInfo.memoryInfo.cpuRate}%</td></tr>
        <tr><td>总内存:</td><td>${(serverInfo.memoryInfo.total / 1024).toFixed(2)}GB</td></tr>
        <tr><td>已使用:</td><td>${(serverInfo.memoryInfo.used / 1024).toFixed(2)}GB</td></tr>
        <tr><td>空闲:</td><td>${(serverInfo.memoryInfo.free / 1024).toFixed(2)}GB</td></tr>
        <tr><td>内存使用率:</td><td>${(100 * serverInfo.memoryInfo.used / serverInfo.memoryInfo.total).toFixed(2)}%</td></tr>`;

                let diskInfoTableHtml = '';
                for(let i = 0; i < serverInfo.diskInfos.length; i++) {
                    const diskInfo = serverInfo.diskInfos[i];
                    diskInfoTableHtml += `<tr>
                            <td>(${diskInfo.diskName})(${diskInfo.typeName}):</td>
                            <td>${(100 * diskInfo.used / diskInfo.totalSize).toFixed(4)}%</td>
                        </tr>`;
                }
                document.querySelector('#diskInfoTable').innerHTML = diskInfoTableHtml;
            });
        }
    </script>
}