@{
    Layout = null;
    ViewData["Title"] = "Backups";
}

<div>
    <h3 class="text-center">数据库备份记录</h3>
    <div id="tableContainer"></div>
</div>

<script>
    $(function () {
        const apiUrl = "/Database/BackupRecords";
        const pageIndex = 1;
        const pageSize = 10;
        const tableId = 'dataTable';
        const tableParentSelector = "#tableContainer";
        const ths = [
            { name: 'dbConnectionInfoId', title: '数据库连接', type: 'dataSource|dataSourceApi=/Database/ConnectionStrings?pageIndex=1&pageSize=1000|displayField=name' },
            { name: 'name', title: '名称', searchedByKeywords: true },
            { name: 'domain', title: '备份主机' },
            { name: 'backupDir', searchedByKeywords: true, title: '备份目录' },
            { name: 'remark', title: '备注', searchedByKeywords: true, align: 'center' },
            { name: 'size', title: '备份大小', isNumber: true, formatter: formatFileSize, align: 'center' },
            { name: 'createTime', title: '创建时间', align: 'center' },
            { name: 'updateTime', title: '更新时间', align: 'center' },
            // 操作栏
            { name: '', title: '操作', width: '200', type: 'button', tmpl: `
                    <button type="button" class="btn btn-primary btn-sm" data-table-id="${tableId}" data-id="{{id}}" data-fetch-url="/Database/BackupRecords" data-method="POST" onclick="showUpdatePannel(this)">修改</button>
                    <button type="button" class="btn btn-primary btn-sm" data-table-id="${tableId}" data-content="&quot;{{id}}&quot;" data-execute-url="/Database/DeleteBackup" data-method="POST" onclick="showConfirmBox('确定删除? 此操作无法撤销!', () => execute(this))">删除</button>
                    <button type="button" class="btn btn-primary btn-sm restore" data-table-id="${tableId}" data-id="{{id}}" data-content="" data-execute-url="/Database/Restore?id={{id}}&tables=" data-method="POST">还原</button>
                    `
            }
        ]
        async function restore(trigger) {
            const backupId = trigger.getAttribute('data-id')
            const restoreConnectionId = document.querySelector('#restoreConnectionId').value
            const exeParams = {
                'dataTableId': tableId,
                'dataContent': `{"id": ${backupId}, "restoreConnectionId": "${restoreConnectionId}", "tables": "${document.querySelector('#tables').value}"}`,
                'dataExecuteUrl': '/Database/Restore',
                'dataMethod': 'POST',
                'trigger': trigger
            }
            await execute(exeParams, callback)

            function callback(response) {
                // 不能仅移除modal, 因为这样仅仅移除了modal, modal还有background存在, 会挡住整个页面, 所以调用click方法关闭modal
                document.querySelector('#restore-modal .btn-close').click()
                showResultBox(response)
            }
        }
        function showRestorePannel(trigger) {
            // 先检查是否有旧的Modal, 有则移除
            const oldModal = document.querySelector('#restore-modal')
            if (oldModal) {
                document.querySelector('#restore-modal').remove()
            }

            const backupId = trigger.getAttribute('data-id')
            const div = document.createElement('div')
            div.classList.add("modal")
            div.classList.add("fade")
            div.id = "restore-modal"
            div.tabIndex = -1
            // div.ariaHidden = true
            div.setAttribute('aria-labelledby', 'restore-modal-title')

            div.innerHTML = `<div class="modal-dialog">
        <div class="modal-content">
          <div class="modal-header">
            <h1 class="modal-title fs-5" id="restore-modal-title">选择需要还原的数据库和表</h1>
            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
          </div>
          <div class="modal-body">
            <div>
                <label for="restoreConnectionId" class="form-label">数据库连接</label>
                <select class="form-control form-select-sm" aria-label="Default select" name="restoreConnectionId" id="restoreConnectionId">
                    ${tables['dataTable'].dataSourceField.dbConnectionInfoId_options}
                </select>
            </div>
            <div class="mt-3">
                <label for="tables" class="form-label">同步的表</label>
                <input class="form-control form-control-sm" type="text" name="tables" id="tables" placeholder="要同步的表, 多个用逗号隔开" />
            </div>
          </div>
          <div class="modal-footer">
            <button type="button" class="btn btn-secondary btn-sm" data-bs-dismiss="modal">关闭</button>
            <button type="button" class="btn btn-primary btn-sm start-restore" data-id="${backupId}">开始还原</button>
          </div>
        </div>
      </div>`
            document.body.append(div)
            const startRestore = document.querySelector('.start-restore')
            startRestore.onclick = () => {
                restore(startRestore)
            }
            const restoreModal = new bootstrap.Modal(div, {
                backdrop: 'static',
                keyboard: false
            })
            restoreModal.show()
        }

        const idFieldName = "id";

        
        /**
         * HttpRequestProcessors
         */
        createTable({
            apiUrl: apiUrl,
            pageIndex: pageIndex,
            pageSize: pageSize,
            tableId: tableId,
            tableContainerSelector: tableParentSelector,
            ths: ths,
            idFieldName: idFieldName,
            onDataAllLoaded: onDataAllLoaded,
            wrapper: '',
            modalSettings: { url: '/Database/AddBackup', method: 'POST', updateUrl: '/Database/UpdateBackup', updateMethod: 'POST' },
            primaryKeyIsInt: true,
            addButtonSelector: '',
            dataViewBuilder: null,
            orderRules: [{ fieldName: 'createTime', isAsc: false }]
        })

        /**
         * 数据加载时, 可以对每一行加载的数据进行相关处理
         */
        function onDataAllLoaded(row) {
            document.querySelectorAll('.restore').forEach(restoreBtn => restoreBtn.onclick = () => showRestorePannel(restoreBtn))
        }

        // function addRestoreBtnsEventListener() {
        //     document.querySelectorAll('.restore').forEach(restoreBtn => restoreBtn.onclick = () => showRestorePannel(restoreBtn))
        // }
    });
</script>
