@{
    Layout = null;
    ViewData["Title"] = "Database Manager";
}

<div>
    <h3 class="text-center">数据库管理</h3>
    <div id="tableContainer"></div>
</div>

<script>
    $(function () {
        const apiUrl = "/Database/ConnectionStrings";
        const pageIndex = 1;
        const pageSize = 10;
        const tableId = 'dataTable';
        const tableParentSelector = "#tableContainer";
        const ths = [
            { name: 'name', title: '名称', searchedByKeywords: true },
            { name: 'alias', title: '别名', searchedByKeywords: true },
            { name: 'connectionString', showPart: 12, title: '连接字符串' },
            { name: 'remark', title: '备注', searchedByKeywords: true },
            { name: 'orderNo', title: '排序', align: 'center' },
            { name: 'createTime', title: '创建时间', align: 'center' },
            { name: 'updateTime', title: '更新时间', align: 'center' },
            // 操作栏
            { name: '', title: '操作', type: 'button', tmpl: `
                    <button type="button" class="btn btn-primary btn-sm" data-table-id="${tableId}" data-id="{{id}}" data-fetch-url="/Database/ConnectionStrings" data-method="POST" onclick="showUpdatePannel(this)">修改</button>
                    <button type="button" class="btn btn-primary btn-sm" data-table-id="${tableId}" data-content="&quot;{{id}}&quot;" data-execute-url="/Database/DeleteConnectionStrings" data-method="POST" onclick="showConfirmBox('确定删除? 此操作无法撤销!', () => execute(this))">删除</button>
                    <button type="button" class="btn btn-primary btn-sm" data-table-id="${tableId}" data-content="&quot;{{id}}&quot;" data-execute-url="/Database/CloneConnectionString" data-method="POST" onclick="showConfirmBox('您确定要克隆数据吗', () => execute(this))">克隆</button>
                    <button type="button" class="btn btn-primary btn-sm backup-btn" data-table-id="${tableId}" data-id="{{id}}">备份</button>
                    `
            }
        ]
        const idFieldName = "id";

        /**
         * HttpRequestProcessors
         */
        createTable({
            apiUrl: apiUrl,
            pageIndex: pageIndex,
            pageSize: pageSize,
            tableId: tableId,
            tableContainerSelector: tableParentSelector,
            ths: ths,
            idFieldName: idFieldName,
            onDataLoaded: onDataLoaded,
            onDataAllLoaded: onDataAllLoaded,
            wrapper: '',
            modalSettings: { url: '/Database/AddConnectionString', method: 'POST', updateUrl: '/Database/UpdateConnectionString', updateMethod: 'POST' },
            primaryKeyIsInt: true,
            addButtonSelector: '',
            dataViewBuilder: null,
            orderRules: [{ fieldName: 'orderNo', isAsc: true }]
        })

        /**
         * 数据加载时, 可以对每一行加载的数据进行相关处理
         */
        function onDataLoaded(row) {
        }
        function onDataAllLoaded(data) {
            document.querySelectorAll('.backup-btn').forEach(backupBtn => backupBtn.onclick = () => showBackupPannel(backupBtn))
        }

        function showBackupPannel(trigger) {
            const dbConnectionInfoId = trigger.getAttribute('data-id')
            const div = document.createElement('div')
            div.classList.add("modal")
            div.classList.add("fade")
            div.id = "backup-modal"
            div.tabIndex = -1
            // div.ariaHidden = true
            div.setAttribute('aria-labelledby', 'backup-modal-title')

            div.innerHTML = `<div class="modal-dialog">
        <div class="modal-content">
          <div class="modal-header">
            <h1 class="modal-title fs-5" id="backup-modal-title">备份数据库</h1>
            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
          </div>
          <div class="modal-body">
            <div>
                <label for="tables" class="form-label">要备份的表</label>
                <input class="form-control form-control-sm" type="text" name="tables" id="tables" placeholder="order(createtime>2025-01-01),... 默认全部" />
            </div>
            <div class="mt-3">
                <label for="name" class="form-label">备份名称</label>
                <input class="form-control form-control-sm" type="text" name="name" id="name" placeholder="备份名称, 默认当前时间" />
            </div>
            <div class="mt-3">
                <label for="remark" class="form-label">备注</label>
                <input class="form-control form-control-sm" type="text" name="remark" id="remark" placeholder="备注" />
            </div>
          </div>
          <div class="modal-footer">
            <button type="button" class="btn btn-secondary btn-sm" data-bs-dismiss="modal">关闭</button>
            <button type="button" class="btn btn-primary btn-sm start-backup" data-id="${dbConnectionInfoId}">开始备份</button>
          </div>
        </div>
      </div>`
            document.body.append(div)
            const startBackupBtn = document.querySelector('.start-backup')
            startBackupBtn.onclick = () => {
                backup(startBackupBtn)
            }
            const backupModal = new bootstrap.Modal(div, {
                backdrop: 'static',
                keyboard: false
            })
            backupModal.show()
        }
        /**
         * 备份数据库
         */
        async function backup(trigger) {
            const connectionId = trigger.getAttribute('data-id')
            const exeParams = {
                'dataTableId': tableId,
                'dataContent': `{"dbConnectionInfoId": ${connectionId}, "tables": "${document.querySelector('#tables').value}", "name": "${document.querySelector('#name').value}", "remark": "${document.querySelector('#remark').value}"}`,
                'dataExecuteUrl': '/Database/Backup',
                'dataMethod': 'POST',
                'trigger': trigger
            }
            await execute(exeParams, callback)

            function callback(response) {
                // 不能仅移除modal, 因为这样仅仅移除了modal, modal还有background存在, 会挡住整个页面, 所以调用click方法关闭modal
                document.querySelector('#backup-modal .btn-close').click()
                // 然后移除modal, 移除它是因为每次都会重新生成新的modal, 所以旧的要移除
                document.querySelector('#backup-modal').remove()
                showResultBox(response)
            }
        }
    });
</script>
