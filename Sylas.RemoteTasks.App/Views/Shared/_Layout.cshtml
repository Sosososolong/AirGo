<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - Sylas.RemoteTasks.App</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/Sylas.RemoteTasks.App.styles.css" asp-append-version="true" />
</head>
<body>
    <header>
        <nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3">
            <div class="container-fluid">
                <a class="navbar-brand" asp-area="" asp-controller="Home" asp-action="Index">Sylas.RemoteTasks.App</a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target=".navbar-collapse" aria-controls="navbarSupportedContent"
                        aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="navbar-collapse collapse d-sm-inline-flex justify-content-between">
                    <ul class="navbar-nav flex-grow-1">
                        <li class="nav-item dropdown">
                            <a class="nav-link dropdown-toggle text-dark" role="button" data-bs-toggle="dropdown" aria-expanded="false">Home</a>
                            <ul class="dropdown-menu">
                                <li><a class="dropdown-item" asp-area="" asp-controller="Home" asp-action="Index">Index</a></li>
                                <li><a class="dropdown-item" asp-area="" asp-controller="Home" asp-action="Prepare">CodeGen0(项目管理 未完成)</a></li>
                                <li><a class="dropdown-item" asp-area="" asp-controller="Home" asp-action="CodeGen">CodeGen1(简单api)</a></li>
                                <li><a class="dropdown-item" asp-area="" asp-controller="Home" asp-action="CodeGen2">CodeGen2(通用 New)</a></li>
                            </ul>
                        </li>
                        
                        <!--Study-->
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-controller="Study" asp-action="Index">Study</a>
                        </li>

                        <!--Hosts-->
                        <li class="nav-item dropdown">
                            <a class="nav-link dropdown-toggle text-dark" role="button" data-bs-toggle="dropdown" aria-expanded="false">Hosts</a>
                            <ul class="dropdown-menu">
                                <li><a class="dropdown-item" href="/Hosts">Index</a></li>
                                <li><a class="dropdown-item" href="/Hosts/AnythingInfos">Anything</a></li>
                                <li><a class="dropdown-item" href="/Hosts/ServerAndAppStatus">Server And App Status</a></li>
                            </ul>
                        </li>
                        
                        <!--Database ConnectionStrings-->
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-controller="Database" asp-action="Index">Database</a>
                        </li>

                        <!--OAuth Test-->
                        <li class="nav-item dropdown">
                            <a class="nav-link dropdown-toggle text-dark" role="button" data-bs-toggle="dropdown" aria-expanded="false">OAuth</a>
                            <ul class="dropdown-menu">
                                <li><a class="dropdown-item" href="/OAuth">微信钉钉第三方登录</a></li>
                                <li><a class="dropdown-item" href="/OAuth/Password">密码模式登录</a></li>
                            </ul>
                        </li>
                        
                        <!--Projects Manager-->
                        <li class="nav-item">
                            <a class="nav-link text-dark" href="/Project">Projects</a>
                        </li>
                        
                        <!--Snippets Manager-->
                        <li class="nav-item">
                            <a class="nav-link text-dark" href="/Snippet">Snippets</a>
                        </li>
                        
                        <!--Sync Manager-->
                        <li class="nav-item">
                            <a class="nav-link text-dark" href="/Sync">数据同步</a>
                        </li>
                    </ul>
                </div>
            </div>
        </nav>
    </header>
    <div class="container-fluid">
        <main role="main" class="pb-3">
            @RenderBody()
        </main>
    </div>

    <footer class="border-top footer text-muted">
        <div class="container">
            &copy; 2022 - Sylas.RemoteTasks.App - <a asp-area="" asp-controller="Home" asp-action="Privacy">Privacy</a>
        </div>
    </footer>

    <!--消息提示框 msgBox-->
    <div class="modal fade" tabindex="-1" id="msgBox">
        <div class="modal-dialog modal-dialog-centered modal-dialog-scrollable modal-sm">
            <div class="modal-content">
                <div class="modal-header" style="border:none;">
                    @* <h5 class="modal-title"></h5> *@
                    <p class="modal-title"></p>
                    @*<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>*@
                </div>
                <div class="modal-body"></div>
                <div class="modal-footer" style="border:none;">
                    <button type="button" class="btn btn-" data-bs-dismiss="modal">关闭</button>
                </div>
            </div>
        </div>
    </div>
    <!--消息提示框 confirmBox-->
    <div class="modal fade" tabindex="-1" id="confirmBox">
        <div class="modal-dialog modal-dialog-centered modal-dialog-scrollable modal-sm">
            <div class="modal-content">
                <div class="modal-header" style="border:none;">
                    @* <h5 class="modal-title"></h5> *@
                    <p class="modal-title"></p>
                    @*<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>*@
                </div>
                <div class="modal-body"></div>
                <div class="modal-footer" style="border:none;">
                    <button type="button" class="btn btn-" data-bs-dismiss="modal">关闭</button>
                </div>
            </div>
        </div>
    </div>
    <!--spinner class去掉了fade, 因为网络请求有时候只有3ms|4ms, 动画时间不止这么长时间, 也就是说此时执行关闭modal的时候modal仍然处于动画状态下还没有完全显示出来, 这样modal是不会关闭的-->
    <div class="modal" id="globalSpinner">
        <div class="modal-dialog modal-dialog-centered modal-dialog-scrollable modal-sm">
            <div class="modal-content" style="background-color:transparent; border:none;">
                <div class="modal-body">
                    <div class="d-flex justify-content-center">
                        <div class="spinner-border text-primary" role="status">
                            <span class="visually-hidden">Loading...</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    <script>
        const msgBox = new bootstrap.Modal('#msgBox', {
            backdrop: 'static',
            keyboard: false
        });
        const confirmBox = new bootstrap.Modal('#confirmBox', {
            backdrop: 'static',
            keyboard: false
        });
        const spinner = new bootstrap.Modal('#globalSpinner', {
            backdrop: 'static',
            keyboard: false
        });

        // 是否需要登陆
        const accessToken = getAccessToken();
        const path = location.pathname;
        if (!accessToken) {
            closeSpinner();
            location.href = `/Home/Login?redirect_path=${path}`;
        }

        function showBox(msg, onClose, title = '提示', titleClass = '', confirmBtnContent = '确定', confirmBtnClass = 'btn-success') {
            $('#msgBox .modal-title').text(title);
            if (titleClass) {
                $('#msgBox .modal-title').parent().addClass(titleClass);
            }
            $('#msgBox .modal-body').text(msg);
            $('#msgBox .modal-footer').html(`<button type="button" class="btn ${confirmBtnClass}" data-bs-dismiss="modal" onclick="">${confirmBtnContent}</button>`);
            if (onClose && typeof onClose === 'function') {
                let confirmBtn = document.querySelector('#msgBox button[data-bs-dismiss="modal"]');
                function onCloseFunc() {
                    onClose();
                    confirmBtn.removeEventListener('click', onCloseFunc);
                }
                confirmBtn.addEventListener('click', onCloseFunc, false)
            }
            msgBox.show();
        }
        function showMsgBox(msg, onClose) {
            showBox(msg, onClose, '提示', 'bg-success');
        }

        function showWarningBox(msg, onClose) {
            showBox(msg, onClose, '请注意', 'bg-warning', '确定', 'btn-warning');
        }

        function showErrorBox(errMsg, onClose) {
            showBox(errMsg, onClose, '错误', 'bg-danger text-white', '关闭', 'btn-danger');
        }

        function showConfirmBox(confirmMsg, callback) {
            if (!callback) {
                window.callback = () => { };
            }
            $('#confirmBox .modal-title').text('确认');
            $('#confirmBox .modal-body').text(confirmMsg);
            $('#confirmBox .modal-footer').html(`<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">取消</button><button type="button" class="btn btn-danger" id="confirm" data-bs-dismiss="modal">确定</button>`);
            $('#confirmBox button[id="confirm"]').click(callback);

            confirmBox.show();
        }

        function showSpinner(target) {
            if (target) {
                if (target instanceof NodeList) {
                    target.forEach(item => addTargetSpinner(item))
                } else {
                    addTargetSpinner(target);
                }
            } else {
                spinner.show();
            }
        }

        function closeSpinner(target) {
            if (target) {
                if (target instanceof NodeList) {
                    target.forEach(item => removeTargetSpinner(item))
                } else {
                    removeTargetSpinner(target);
                }
            } else {
                spinner.hide();
            }
        }

        function addTargetSpinner(ele) {
            let originHtml = ele.innerHTML;
            if (ele.tagName === 'BUTTON') {
                ele.setAttribute('disabled', true)
            }
            // aria-hidden="true"
            ele.innerHTML = `<span class="spinner-border spinner-border-sm" role="status"></span> ${originHtml}`;
        }
        function removeTargetSpinner(ele) {
            if (ele.tagName === 'BUTTON') {
                ele.removeAttribute('disabled');
            }
            // aria-hidden="true"
            ele.innerHTML = ele.innerHTML.replace('<span class="spinner-border spinner-border-sm" role="status"></span> ', '');
        }

        function addOverlay(targetId) {
            // 创建覆盖层的 div 元素
            var overlay = document.createElement('div');
            overlay.classList.add('overlay');
            overlay.innerHTML = `
            <div class="spinner-border text-primary" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
            `;

            // 获取要覆盖的目标元素
            var target = typeof(targetId) === 'string' ? document.querySelector(`#${targetId}`) : targetId;

            // 获取目标元素的位置和尺寸信息
            var rect = target.getBoundingClientRect();

            // 设置覆盖层基本样式
            overlay.style.position = 'absolute';
            overlay.style.backgroundColor = 'rgba(200,200,200,0.2)';
            overlay.style.zIndex = '999';
            // 设置覆盖层的位置和尺寸
            overlay.style.top = rect.top + 'px';
            overlay.style.left = rect.left + 'px';
            overlay.style.width = rect.width + 'px';
            overlay.style.height = rect.height + 'px';
            // 设置覆盖层水平垂直居中
            overlay.style.display = 'flex';
            overlay.style.justifyContent = 'center';
            overlay.style.alignItems = 'center';

            // 将覆盖层插入到目标元素的父节点中
            target.parentNode.insertBefore(overlay, target);
            return overlay;
        }

        function removeOverlay(overlay) {
            overlay.remove();
        }
    </script>
    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>
